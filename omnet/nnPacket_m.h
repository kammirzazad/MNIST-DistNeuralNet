//
// Generated file, do not edit! Created by nedtool 5.3 from nnPacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __NNPACKET_M_H
#define __NNPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "actors/include/token.h"
// }}

/**
 * Class generated from <tt>nnPacket.msg:23</tt> by nedtool.
 * <pre>
 * packet nnPacket
 * {
 *     long sequenceNumber;
 *     nnData payload;
 * }
 * </pre>
 */
class nnPacket : public ::omnetpp::cPacket
{
  protected:
    long sequenceNumber;
    nnData payload;

  private:
    void copy(const nnPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const nnPacket&);

  public:
    nnPacket(const char *name=nullptr, short kind=0);
    nnPacket(const nnPacket& other);
    virtual ~nnPacket();
    nnPacket& operator=(const nnPacket& other);
    virtual nnPacket *dup() const override {return new nnPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual long getSequenceNumber() const;
    virtual void setSequenceNumber(long sequenceNumber);
    virtual nnData& getPayload();
    virtual const nnData& getPayload() const {return const_cast<nnPacket*>(this)->getPayload();}
    virtual void setPayload(const nnData& payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const nnPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, nnPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __NNPACKET_M_H

